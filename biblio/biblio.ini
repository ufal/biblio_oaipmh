###
# App Configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:Kuha

###
# Pyramid Configuration
###

# When this value is true, templates are automatically reloaded whenever
# they are modified without restarting the application, so you can see
# changes to templates take effect immediately during development. This
# flag is meaningful to Chameleon and Mako templates, as well as most
# third-party template rendering extensions.
# Turn off in production.
pyramid.reload_templates = true

# Print view authorization failure and success information to stderr when
# this value is true.
pyramid.debug_authorization = false

# Print view-related NotFound debug messages to stderr when this value is
# true.
pyramid.debug_notfound = false

# Print debugging messages related to url dispatch route matching when this
# value is true.
pyramid.debug_routematch = false

# The value supplied here is used as the default locale name when a locale
# negotiator is not registered.
pyramid.default_locale_name = en

# Instructs your application to include other packages.
# Turn debugtoolbar off in production.
pyramid.includes = pyramid_debugtoolbar

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

###
# OAI-PMH Server Configuration
###

# Maximum number of headers or records returned as a response to
# a ListIdentifier or a ListRecords request. A resumption token will be
# issued if the response would be longer that this limit.
item_list_limit = 100

# Name of the repository in the response to an Identify request.
repository_name = OAI-PMH Biblio Repository

# Email addresses of the administrators of the repository. Part of the
# response to an Identify request.
admin_emails =
    lindat-technical@ufal.mff.cuni.cz

# List of files to read for additional repository descriptions. The
# descriptions are part of the response to an Identify request.
repository_descriptions =

# Behavior when records are removed. Part of the response to an Identify
# request. Allowed values for deleted_records are "no", "transient" and
# "persistent".
#
# Value of "no" implies that when records are removed they are deleted from
# the database. Deleted records are as if the never existed.
#
# Value of "persistent" implies that when an item is removed, the
# associated records are marked as deleted. The records should not be
# removed from the database manually, since that would violate the OAI-PMH
# protocol.
#
# Value of "transient" behaves equivalently to "persistent", but the
# records may be deleted manually.
deleted_records = no

# Path to the logging configuration file.
logging_config = %(here)s/biblio.ini

###
# Metadata Importer Configuration
###

# Path of the timestamp file. The timestamp of the import will be saved to
# this file. If the file exists when starting the import, it will be parsed
# to get the time of the last import. Only records that have changed after
# the time will be harvested.
timestamp_file = last_update

# Set to `yes` to force harvesting of all records even if they have not
# changed since the last import.
force_update = yes

# Set to `yes` to test harvesting without affecting the database.
dry_run = no

# The class to use for fetching metadata.
metadata_provider_class = biblio_metadata_provider:Provider
# Arguments for the metadata provider.
metadata_provider_args =

###
# Database Configuration
###

# The database URL for SQLAlchemy.
sqlalchemy.url = sqlite:///%(here)s/kuha.sqlite

[server:main]
use = egg:waitress#main

###
# WSGI Server Configuration
###

# Hostname or IP address on which to listen.
# host = 0.0.0.0
host = 0.0.0.0

# TCP port on which to listen.
port = 6543

[loggers]

###
# Logging Configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

keys = root, kuha, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_kuha]
level = INFO
handlers =
qualname = kuha

[logger_sqlalchemy]
#level = INFO
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
